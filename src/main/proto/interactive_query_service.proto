syntax = "proto3";

package io.confluent.developer.iq;

option java_multiple_files = true;
option java_package = "io.confluent.developer.proto";
option java_outer_classname = "QueryProtos";

import "google/protobuf/struct.proto";


message StockTransaction {
   string symbol = 1;
   bool is_buy = 2;
   double amount = 3;
}

message StockTransactionAggregationResponse {
  string symbol = 1;
  double buys = 2;
  double sells = 3;
}

message HostInfo {
  string host = 1;
  int32 port = 2;
}

message KeyQueryMetadata {
    int32 partition = 1;
    HostInfo activeHost = 2;
    repeated HostInfo standbyHosts = 3;
}

message KeyQueryRequest {
  repeated string symbols = 1;
  KeyQueryMetadata keyQueryMetadata = 2;
}

message RangeQueryRequest {
  string lower = 1;
  string upper = 2;
}

message RemoteRequest {
  oneof request {
    KeyQueryRequest key_request = 1;
    RangeQueryRequest range_request = 2;
  }
}

message QueryResponse {
  string error_message = 1;
  map<string, google.protobuf.ListValue> execution_info = 2;
  string host_type = 3;
  repeated StockTransactionAggregationResponse response = 4;
}

message Empty {}

service InternalQuery {
  rpc GetAggregationForSymbol (KeyQueryRequest) returns (StockTransactionAggregationResponse);
}
