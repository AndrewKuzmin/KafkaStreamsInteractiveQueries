buildscript {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://packages.confluent.io/maven/")
        }
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = uri("https://jitpack.io")
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
}

group = 'io.confluent.developer'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_14

repositories {
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }

    maven {
        url = uri("https://jitpack.io")
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'

    implementation('org.apache.kafka:kafka-streams:3.2.3') {
        exclude group: 'org.apache.kafka', module: 'kafka-clients'
    }
    implementation('org.apache.kafka:kafka-clients:3.2.3')

    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation(platform('org.junit:junit-bom:5.9.0'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.2.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

